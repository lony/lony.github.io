<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Commands on [x]</title>
    <link>https://lony.github.io/tags/commands/index.xml</link>
    <description>Recent content in Commands on [x]</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/lony&#34;&gt;Goetz Epperlein&lt;/a&gt; 2016 - 2017</copyright>
    <atom:link href="https://lony.github.io/tags/commands/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CLI commands</title>
      <link>https://lony.github.io/post/2017/cli-commands/</link>
      <pubDate>Sat, 25 Feb 2017 18:02:52 +0200</pubDate>
      
      <guid>https://lony.github.io/post/2017/cli-commands/</guid>
      <description>

&lt;p&gt;Working with UNIX systems you often need commands to get something done. This is a continuously updated collection of useful commands I compile and maintain for myself - and maybe also for &lt;code&gt;you&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The collection is divided into different sections under which the commands are explained. For each commands there are examples how to use them, as links - from which information about the command can be gathered. For the most commands there is also a short explanation what it does.&lt;/p&gt;

&lt;p&gt;If you find a bug or want to recommend something, please feel free to open an &lt;a href=&#34;https://github.com/lony/lony.github.io/issues&#34;&gt;issue&lt;/a&gt; and help me get better. - Thank you!&lt;/p&gt;

&lt;h1 id=&#34;toc&#34;&gt;TOC&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#file-system&#34;&gt;File system&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#configuration-management&#34;&gt;Configuration management&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ansible&#34;&gt;Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#chef&#34;&gt;Chef&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#package-management&#34;&gt;Package management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#processes&#34;&gt;Processes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#docker&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vagrant&#34;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#virtualbox&#34;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#user-environment&#34;&gt;User environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#text-processing&#34;&gt;Text processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#shell-bulletins&#34;&gt;Shell bulletins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#networking&#34;&gt;Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#searching&#34;&gt;Searching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#miscellaneous&#34;&gt;Miscellaneous&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#programming-sh&#34;&gt;Programming sh&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#array&#34;&gt;array&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#for&#34;&gt;for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#if&#34;&gt;if&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#until&#34;&gt;until&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pasting&#34;&gt;pasting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pipe&#34;&gt;pipe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#read&#34;&gt;read&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#databases&#34;&gt;Databases&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#nosql&#34;&gt;NoSQL&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#mongo&#34;&gt;Mongo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#setup&#34;&gt;Setup&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#prompt&#34;&gt;Prompt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#distribution&#34;&gt;Distribution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#meta&#34;&gt;Meta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;file-system&#34;&gt;File system&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;cat&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat /etc/issue&lt;/code&gt; - Show ubuntu system version&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ls&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls -R&lt;/code&gt; - Recursive list of directory and files within&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls=&#39;ls -Fh -G&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l=&#39;ls -1A&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ll=&#39;ls -lh&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ln - Link files &lt;a href=&#34;http://stackoverflow.com/questions/9587445/how-to-create-a-link-to-a-directory&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ln -s /foo/bar /home/lony/bar&lt;/code&gt; - Creates symbolic link&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ln /foo/bar /home/lony/bar&lt;/code&gt; - Creates hard link (files only)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;losetup &lt;a href=&#34;https://linux.die.net/man/8/losetup&#34;&gt;1&lt;/a&gt; - control loop devices&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create, format and mount loopback device &lt;a href=&#34;https://stackoverflow.com/questions/16044204/testing-out-of-disk-space-in-linux&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://linux.die.net/man/1/dd&#34;&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dd if=/dev/zero of=/tmp/tcp_dump_data bs=1M count=2 # Create a file with random data
losetup -f /tmp/tcp_dump_data                       # Create loopback device from file
mkfs.ext4 /dev/loop0                                # Format loopback device
mount /dev/loop0 /mnt/test                          # Mount loopback device
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Unmount and delete loopback device&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;umount /mnt/test                                    # Unmount loopback device
losetup -D                                          # Delete loopback device
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;losetup -a&lt;/code&gt; - List all existing loopback devices&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;losetup --list&lt;/code&gt; &lt;a href=&#34;https://unix.stackexchange.com/questions/172382/how-to-find-which-images-belong-to-which-dev-loop&#34;&gt;1&lt;/a&gt; - Show images behind loopback devices&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;mkfifo - Create named pipe&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkfifo in 
ssh -A -l LOGIN BASTIAN_HOST nc TARGET_HOST TARGET_PORT &amp;lt;in | nc -l LOCAL_PORT &amp;gt;in
rm in
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;openssl &lt;a href=&#34;http://snazzylabs.com/tutorial/five-advanced-tricks-for-mac-users/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://www.czeskis.com/random/openssl-encrypt-file.html&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs&#34;&gt;3&lt;/a&gt; - SSL encryption library&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;openssl enc -aes-256-cbc -e -in {path-in} -out {path-out}&lt;/code&gt; - Encrypt file with password (aes-256)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl enc -aes-256-cbc -d -in {path-in} -out {path-out}&lt;/code&gt; - Decrypt file with password (aes-256)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl rsa -des3 -in {path-in} -out {path-out}&lt;/code&gt; - Encrypt key with password (rsa)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl rsa -in {path-in} -out {path-out}&lt;/code&gt; - Decrypt key with password (rsa)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo | openssl s_client -host IP_OF_TARGET -port 443 2&amp;gt;&amp;amp;1 | openssl x509 -noout -subject&lt;/code&gt; - Get SSL certificate subject of target machine&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl rand -base64 12&lt;/code&gt; - Create a random string with 12 characters (password generator)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl dgst -sha256 FILE&lt;/code&gt; &lt;a href=&#34;https://forums.appleinsider.com/discussion/192161/how-to-verify-checksums-when-you-download-an-app-for-your-mac&#34;&gt;1&lt;/a&gt; - Create SHA256 checksum for file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;openssl md5 FILE&lt;/code&gt; - Create MD5 checksum for file&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;rsync &lt;a href=&#34;https://en.wikipedia.org/wiki/Rsync&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://stackoverflow.com/questions/4493525/rsync-what-means-the-f-on-rsync-logs&#34;&gt;2&lt;/a&gt; - Data synchronization tool&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;rsync -rlptzvn rsync://USER@foo.bar.de/home/lony_src/ /home/lony_dest/&lt;/code&gt; - Synchronize data from source to destination preserving source and not deleting anything&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt; - Recurs into folders&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; - Copy also symlinks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - Preserve permissions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt; - Preserve modification times&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; - Compress during transfer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - Verbosity ++&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--dry-run&lt;/code&gt; - Perform trial run&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;rsync -aivh --progress --delete source/ dest/&lt;/code&gt; &lt;a href=&#34;http://askubuntu.com/questions/476041/how-do-i-make-rsync-delete-files-that-have-been-deleted-from-the-source-folder&#34;&gt;1&lt;/a&gt; - Synchronize files and even delete irrelevant files on destination&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt; - Archive mode; equals &lt;code&gt;-rlptgoD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt; - Preserve group&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt; - Preserve owner&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; - Preserve devices and special files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; - Numbers in human-readable format&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; &lt;a href=&#34;http://serverfault.com/questions/618735/can-i-use-rsync-to-create-a-list-of-only-changed-files&#34;&gt;1&lt;/a&gt; - Change summary for all updates&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--progress&lt;/code&gt; - Show progress of transfer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--delete&lt;/code&gt; - Deletes irrelevant files from destination&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;rsync -rlptzvhn --progress --remove-source-files --prune-empty-dirs --ignore-errors source/ dest/&lt;/code&gt; &lt;a href=&#34;https://superuser.com/questions/676671/rsync-does-not-delete-source-directories&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://unix.stackexchange.com/questions/78375/move-files-and-delete-directories-with-rsync&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;http://serverfault.com/questions/598662/copy-directory-tree-without-empty-directories&#34;&gt;3&lt;/a&gt; - Copy files from source to destination deleting them at the source afterwards (empty folders will be kept)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--remove-source-files&lt;/code&gt; - Remove synchronized files from source&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--prune-empty-dirs&lt;/code&gt; - Ignore empty directories for transfer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--ignore-errors&lt;/code&gt; - Ignore errors
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;rsync -vzi -e ssh server:source/ dest/&lt;/code&gt; &lt;a href=&#34;https://kyup.com/tutorials/copy-files-rsync-ssh/&#34;&gt;1&lt;/a&gt; - Use rsync via ssh&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tar&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tar cvzf - 2017-02-11_T430s_Windows8.tib | split -b 4294967295 -  ../win-bu.tar.gz.&lt;/code&gt; &lt;a href=&#34;http://unix.stackexchange.com/questions/61774/create-a-tar-archive-split-into-blocks-of-a-maximum-size&#34;&gt;1&lt;/a&gt; - Create gzip tar archiv in multiple chunks&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;cat win-bu.tar.gz.aa win-bu.tar.gz.ab &amp;gt; combined.tar.gz \
gunzip combined.tar.gz \
tar -xvf combined.tar&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/27491606/how-to-create-a-linux-compatible-zip-archive-of-a-directory-on-a-mac&#34;&gt;1&lt;/a&gt; - Unzip multi-chunk gunziped tar archive&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;virtualenv - Virtual environments for python&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;virtualenv -p /usr/bin/python2.7 venv --no-site-packages&lt;/code&gt; - Create a virtual python2.7 environment inside &lt;em&gt;venv&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;zip&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;zip -r &amp;lt;TARGET_.zip&amp;gt; &amp;lt;SOURCE_FOLDER&amp;gt;/&lt;/code&gt; &lt;a href=&#34;http://unix.stackexchange.com/questions/57013/zip-all-files-in-directory&#34;&gt;1&lt;/a&gt; - Zip folder recursively&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zip -r -s 3g archive.zip FolderName/&lt;/code&gt; &lt;a href=&#34;http://www.addictivetips.com/mac-os/how-to-create-a-split-zipped-archive-from-mac-os-x-terminal/&#34;&gt;1&lt;/a&gt; - Split into multiple chunks&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;configuration-management&#34;&gt;Configuration management&lt;/h2&gt;

&lt;h3 id=&#34;ansible&#34;&gt;Ansible&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ansible-playbook - Runs Ansible playbooks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ansible-playbook site.yml -i localhost, --connection=local&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;chef&#34;&gt;Chef&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;berks&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;berks install&lt;/code&gt; - Updates cookbook dependencies (pessimistic)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;berks update&lt;/code&gt; - Updates cookbook dependencies to latest lib version (optimistic)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;berks upload&lt;/code&gt; - Uploads local cookbook and its dependencies to chef server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;chef-client&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chef-client -W&lt;/code&gt; - Test run without actually changing anything&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;chef-server-ctl&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chef-server-ctl user-create &amp;lt;LOGIN_NAME&amp;gt; &amp;lt;FIRST_NAME&amp;gt; &amp;lt;SECOND_NAME&amp;gt; &amp;lt;EMAIL&amp;gt; &amp;lt;PASSWORD&amp;gt; -f &amp;lt;/tmp/KEY_FILE.pem&amp;gt;&lt;/code&gt;- Create user&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chef-server-ctl user-delete &amp;lt;LOGIN_NAME&amp;gt;&lt;/code&gt; - Delete user&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chef-server-ctl org-user-add -a &amp;lt;ORGA&amp;gt; &amp;lt;LOGIN_NAME&amp;gt;&lt;/code&gt; - Add user into organization using chef ACL&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;knife&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;knife node list&lt;/code&gt; - Show systems&lt;/li&gt;
&lt;li&gt;&lt;code&gt;knife node from file nodes/&amp;lt;MASCHINE_NAME&amp;gt;.rb&lt;/code&gt; - Loads local node configuration to Chef server&lt;/li&gt;
&lt;li&gt;&lt;code&gt;knife data bag list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;knife data bag show &amp;lt;DATA_BAG_FOLDer&amp;gt; &amp;lt;DATA_BAG_FILE&amp;gt; --format=json&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife data bag show &amp;lt;DATA_BAG_FOLDer&amp;gt; &amp;lt;DATA_BAG_FILE&amp;gt; -z --secret-file &amp;lt;SYMMETRIC_SECRET_KEY&amp;gt; -Fjson&lt;/code&gt; - Shows locally stored encrypted data bag&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-z&lt;/code&gt; - Local chef mode, uses local files

&lt;ul&gt;
&lt;li&gt;HINT: Needs chef-repo structure as on the server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--secret-file&lt;/code&gt; - Specifies symmetric key used to encrypted and decrypted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Fjson&lt;/code&gt; same as &lt;code&gt;--format=jso&lt;/code&gt; - Output data as JSON&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife vault list&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife vault show &amp;lt;DATA_BAG_FOLDer&amp;gt; &amp;lt;DATA_BAG_FILE&amp;gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife cookbook download -s &amp;quot;https://&amp;lt;SERVER_URL&amp;gt;&amp;quot; &amp;lt;COOKBOOK_NAME&amp;gt; 0.3.0&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife status&lt;/code&gt; &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-manage-your-cluster-with-chef-and-knife-on-ubuntu&#34;&gt;1&lt;/a&gt; - Shows infos about node as last successfull chef-client&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife search node &amp;quot;fqdn:web*-?.* OR fqdn:app-1&amp;quot; -i&lt;/code&gt; &lt;a href=&#34;https://docs.chef.io/knife_search.html&#34;&gt;1&lt;/a&gt; - Searches for nodes in chef-server registry&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;knife ssh &amp;quot;fqdn:web*-?.*&amp;quot; &amp;quot;lsb_release -r &amp;amp;&amp;amp; uname -rv&amp;quot;&lt;/code&gt; - Show Ubuntu release and kernel for all web servers&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;kitchen&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;kitchen create&lt;/code&gt; - Create instance/container using provisioner&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kitchen converge&lt;/code&gt; - Runs chef on the instance/container&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kitchen verify&lt;/code&gt; -  Runs tests on the instance/container&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kitchen test&lt;/code&gt; - Does all togehter and at the end drops container&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kitchen login&lt;/code&gt; - Opens shell into instance/container&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kitchen list&lt;/code&gt; - Lists instance/container&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;package-management&#34;&gt;Package management&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;apt &lt;a href=&#34;http://askubuntu.com/questions/705885/difference-between-dpkg-i-and-apt-get-install&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://askubuntu.com/questions/309113/what-is-the-difference-between-dpkg-and-aptitude-apt-get&#34;&gt;2&lt;/a&gt; - Debian/Ubuntu package manager (including dependencies)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apt-get update&lt;/code&gt; -  Update is used to re-synchronize the package index files from their sources via Internet&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get upgrade&lt;/code&gt; - Upgrade is used to install the newest versions of all packages currently installed on the system&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get install --only-upgrade linux-generic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get autoremove --purge&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get upgrade --dry-run&lt;/code&gt; &lt;a href=&#34;http://askubuntu.com/questions/99834/how-do-you-see-what-packages-are-available-for-update&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-get dist-upgrade&lt;/code&gt; &lt;a href=&#34;https://www.cyberciti.biz/faq/how-do-i-update-ubuntu-linux-software&#34;&gt;1&lt;/a&gt; - Update newer version of distribution&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apt-cache policy&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/8647454/how-to-get-a-list-of-repositories-apt-get-is-checking&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://wiki.ubuntuusers.de/sources.list/&#34;&gt;2&lt;/a&gt; - Show list of repositories&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;aptitude &lt;a href=&#34;http://unix.stackexchange.com/questions/767/what-is-the-real-difference-between-apt-get-and-aptitude-how-about-wajig&#34;&gt;1&lt;/a&gt; - cli GUI for package management&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;dpkg - Debian/Ubuntu package manager (without dependencies)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dpkg -l&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pip - Python package manager&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install ansible&lt;/code&gt; - Install package&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt; - Install all packages listed in requirements.txt&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo update-alternatives --config java&lt;/code&gt; - Set default Java version on system&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;version-control-systems-https-en-wikipedia-org-wiki-version-control-vcs&#34;&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Version_control&#34;&gt;Version control systems&lt;/a&gt; (VCS)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;git &lt;a href=&#34;https://git-scm.com/&#34;&gt;1&lt;/a&gt; - Distributed VCS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git update-index --assume-unchanged FILE_NAME&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/9794931/keep-file-in-a-git-repo-but-dont-track-changes&#34;&gt;1&lt;/a&gt; - Ignore file for comparison (HINT: only set locally on repository)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git update-index --no-assume-unchanged FILE_NAME&lt;/code&gt; - Regard file again for comparison&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;processes&#34;&gt;Processes&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;atop &lt;a href=&#34;http://www.tecmint.com/how-to-install-atop-to-monitor-logging-activity-of-linux-system-processes/&#34;&gt;1&lt;/a&gt; - System &amp;amp; Process Monitor like top or htop&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;df - Display free disk space&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;du&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;du -h --max-depth=1 /&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -a /var | sort -n -r | head -n 10&lt;/code&gt; &lt;a href=&#34;https://www.cyberciti.biz/faq/how-do-i-find-the-largest-filesdirectories-on-a-linuxunixbsd-filesystem/&#34;&gt;1&lt;/a&gt; - List 10 biggest folders or files in /var&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;glances &lt;a href=&#34;https://nicolargo.github.io/glances/&#34;&gt;1&lt;/a&gt; - A top/htop alternative&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;htop &lt;a href=&#34;https://codeahoy.com/2017/01/20/hhtop-explained-visually&#34;&gt;1&lt;/a&gt; - Interactive process monitor&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;iotop &lt;a href=&#34;http://guichaz.free.fr/iotop/&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://www.tecmint.com/iotop-monitor-linux-disk-io-activity-per-process/&#34;&gt;2&lt;/a&gt; - System I/O monitor like top&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo initctl restart apache&lt;/code&gt; &lt;a href=&#34;https://wiki.ubuntu.com/SystemdForUpstartUsers&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;http://upstart.ubuntu.com/&#34;&gt;2&lt;/a&gt; - Restart command for upstart (using /etc/init)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;lsof &lt;a href=&#34;https://en.wikipedia.org/wiki/Lsof&#34;&gt;1&lt;/a&gt; - list of open files&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -i&lt;/code&gt; - All internal network files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof | grep jre&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo lsof -i -n -P | grep LISTEN&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ps &lt;a href=&#34;https://en.wikipedia.org/w/index.php?oldid=765270359&#34;&gt;1&lt;/a&gt; - Static process monitor&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;screen &lt;a href=&#34;https://en.wikipedia.org/wiki/GNU_Screen&#34;&gt;1&lt;/a&gt; - terminal multiplexer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;screen &amp;lt;COMMAND&amp;gt;&lt;/code&gt; - Start command in screen session&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Press (Strg + a + d) - Detach running session &lt;a href=&#34;https://nathan.chantrell.net/linux/an-introduction-to-screen/&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;screen -ls&lt;/code&gt; - List screen sessions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;screen -r&lt;/code&gt; - Resume last running screen session&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;screen -r -d 30608&lt;/code&gt; - Resume already attached session &lt;a href=&#34;http://unix.stackexchange.com/questions/240444/cant-resume-screen-says-i-am-already-attached&#34;&gt;1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;screen -dmS &amp;lt;SESSION_NAME&amp;gt; &amp;lt;COMMAND&amp;gt;&lt;/code&gt; - Starts screen in detached mode using the given session name and command&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo service apache restart&lt;/code&gt; - Restart command for System V (using /etc/init.d)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tmux &lt;a href=&#34;https://en.wikipedia.org/wiki/Tmux&#34;&gt;1&lt;/a&gt; - Terminal multiplexer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tmux list-key&lt;/code&gt; &lt;a href=&#34;https://til.hashrocket.com/posts/385fee97f3-list-all-tmux-key-bindings&#34;&gt;1&lt;/a&gt; - List all key bindings&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux new -s SESSION_NAME&lt;/code&gt; &lt;a href=&#34;https://gist.github.com/MohamedAlaa/2961058&#34;&gt;1&lt;/a&gt; - Create a new session&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux ls&lt;/code&gt; - List sessions&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux detach&lt;/code&gt; &lt;a href=&#34;https://danielmiessler.com/study/tmux&#34;&gt;1&lt;/a&gt; - Detach session&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux a&lt;/code&gt; or &lt;code&gt;tmux a -t SESSION_NAME&lt;/code&gt; - Reattach session&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tmux kill-session -t SESSION_NAME&lt;/code&gt; - Kill the session&lt;/li&gt;
&lt;li&gt;Key bindings (default) &lt;a href=&#34;https://tmuxcheatsheet.com/&#34;&gt;1&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + b&lt;/code&gt; - Default prefix (Ctrl = Strg key)

&lt;ul&gt;
&lt;li&gt;Hint: The prefix is pressed and then released, after this the specific key combo can be pressed for example &lt;code&gt;Ctrl + b&lt;/code&gt; then &lt;code&gt;c&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Session

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; - Rename session&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; - Detach session&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(&lt;/code&gt; - Previous session&lt;/li&gt;
&lt;li&gt;&lt;code&gt;)&lt;/code&gt; - Next session&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Window

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;c&lt;/code&gt; - Create new window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,&lt;/code&gt; - Rename window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;/code&gt; - Close window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p&lt;/code&gt; - Previous window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; - Next window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0...9&lt;/code&gt; - Switch to window number&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pane

&lt;ul&gt;
&lt;li&gt;Use arrow keys to switch to another pane&lt;/li&gt;
&lt;li&gt;&lt;code&gt;;&lt;/code&gt; - Toggle last active pane&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%&lt;/code&gt; - Split pane vertically&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;&lt;/code&gt; - Split pane horizontally&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{&lt;/code&gt; - Shuffle current pane to left&lt;/li&gt;
&lt;li&gt;&lt;code&gt;}&lt;/code&gt; - Shuffle current pane to right&lt;/li&gt;
&lt;li&gt;&lt;code&gt;space&lt;/code&gt; -  Toggle between pane layouts&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o&lt;/code&gt; - Next pane&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt; - Show pane numbers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q 0...9&lt;/code&gt; - Switch to pane number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;z&lt;/code&gt; - Toggle pane zoom (full screen)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt; - Convert pane to window&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; - Close current pane&lt;/li&gt;
&lt;li&gt;&lt;code&gt;M + Arrow key&lt;/code&gt; - Resize pane (M = Alt key)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;top &lt;a href=&#34;https://en.wikipedia.org/w/index.php?oldid=758781701&#34;&gt;1&lt;/a&gt; - Real-time task manager&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tree &lt;a href=&#34;https://en.wikipedia.org/w/index.php?oldid=766877590&#34;&gt;1&lt;/a&gt; - Recursive directory listing program&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tree -d -L 2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker pull jenkins:2.32.1&lt;/code&gt; - Download docker image from registry&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker build&lt;/code&gt; - Build an image from a Dockerfile&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -p 8080:8080 jenkins:2.32.1&lt;/code&gt; - Starts existing docker image and maps port&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -it -d shykes/pybuilder /bin/bash&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/26153686/how-to-run-a-command-on-an-already-existing-docker-container&#34;&gt;1&lt;/a&gt; - Run image and start bash&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker exec -it f151aff2b21e /bin/bash&lt;/code&gt; - Starts docker image f151aff2b21e and open interactive shell&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker ps -a&lt;/code&gt; - List instances (derived from images)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker rm -f 2247780d0b39&lt;/code&gt; - Delete instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker images&lt;/code&gt; - List images&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker rmi ae12afb99714 a78344b99ebc&lt;/code&gt; - Delete images&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;vagrant&#34;&gt;Vagrant&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant global-status&lt;/code&gt; - Show existing VMs&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vagrant global-status --prune&lt;/code&gt; - &lt;a href=&#34;http://stackoverflow.com/questions/24611902/remove-vagrant-box-from-global-status-after-deleting-it-from-filesystem&#34;&gt;1&lt;/a&gt; Update vagrant cache&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant up&lt;/code&gt; - Create VM from scratch&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;export VAGRANT_LOG=debug; vagrant up&lt;/code&gt; - Change vagrant log level&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant provision&lt;/code&gt; - Create VM using existing Vagrantfile&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant destroy -f 1f7d3b6&lt;/code&gt;  - Delete VM&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vagrant destroy -f&lt;/code&gt; - Destroy without confirmation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant ssh&lt;/code&gt; - SSH into the VM&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vagrant ssh-config &amp;lt;NAME_OR_ID_OF_VM&amp;gt; | awk -v ORS=&#39; &#39; &#39;{print &amp;quot;-o &amp;quot; $1 &amp;quot;=&amp;quot; $2}&#39;&lt;/code&gt; - Get parameter to scp into VM&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant plugin list&lt;/code&gt; - Show vagrant plugins&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;vagrant plugin install vagrant-vbguest vagrant-cachier vagrant-share vagrant-triggers&lt;/code&gt; - Install vagrant plugins&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;virtualbox&#34;&gt;VirtualBox&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;VBoxManage list runningvms | awk &#39;{print $2;}&#39; | xargs -I {} VBoxManage controlvm {} poweroff&lt;/code&gt; - &lt;a href=&#34;http://stackoverflow.com/questions/15408969/how-do-i-destroy-a-vm-when-i-deleted-the-vagrant-file&#34;&gt;1&lt;/a&gt; Halt all running virtual boxes&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;VBoxManage list vms | awk &#39;{print $2;}&#39; | xargs -I {} VBoxManage unregistervm {}&lt;/code&gt; - Clean ALL virtual boxes&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;VBoxManage setproperty machinefolder ${BASE_TMP_FOLDER}&lt;/code&gt; - &lt;a href=&#34;http://superuser.com/questions/599421/how-to-move-the-default-folder-for-headless-virtualbox&#34;&gt;1&lt;/a&gt; Switch vagrant box folder&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;user-environment&#34;&gt;User environment&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ldapsearch -H ldap://&amp;lt;SERVER_URL&amp;gt; -w &amp;lt;PASSWORD&amp;gt; -D cn=readonly,dc=lony &amp;quot;(&amp;amp;(objectClass=user)(cn=prod))&amp;quot;&lt;/code&gt; - Command to query LDAP server&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;shutdown -rf now&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;who &lt;a href=&#34;https://en.wikipedia.org/w/index.php?oldid=731053985&#34;&gt;1&lt;/a&gt; - Display users logged in&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;who -r&lt;/code&gt; - Show runlevel&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;text-processing&#34;&gt;Text processing&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;head - Show beginning of file&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head -2 large_file&lt;/code&gt; - Shows only first two lines&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;jq &lt;a href=&#34;https://stedolan.github.io/jq/&#34;&gt;1&lt;/a&gt; - CLI JSON processor&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tail - Show ending of file&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tail -f collectd.log | grep -E --color=auto &#39;*Value too old*&#39;&lt;/code&gt; &lt;a href=&#34;https://unix.stackexchange.com/questions/8414/how-to-have-tail-f-show-colored-output&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://unix.stackexchange.com/questions/106565/how-to-highlight-a-word-in-the-output-of-cat&#34;&gt;2&lt;/a&gt; - Show log output continuously highlighting specific words&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tail -f collectd.log | grep -E --color=auto &#39;*Value too old*&#39; | sed &#39;s/.*name = \(.*\); value.*/\1/&#39; | awk &#39;{ print length($0); }&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/3532718/extract-string-from-string-using-regex-in-the-terminal&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://stackoverflow.com/questions/8786634/how-to-print-the-number-of-characters-in-each-line-of-a-text-file&#34;&gt;2&lt;/a&gt; - Search for pattern regex string and count characters&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;xargs &lt;a href=&#34;https://www.cyberciti.biz/faq/linux-unix-bsd-xargs-construct-argument-lists-utility/&#34;&gt;1&lt;/a&gt; - Sub-list generator&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;shell-bulletins&#34;&gt;Shell bulletins&lt;/h1&gt;

&lt;h1 id=&#34;networking&#34;&gt;Networking&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;curl - Client for URLs&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;curl -X POST -H &amp;quot;Content-Type: application/json&amp;quot; -H &amp;quot;Cache-Control: no-cache&amp;quot; -d &#39;{ &amp;quot;username&amp;quot; : &amp;quot;xxx&amp;quot;, &amp;quot;pw&amp;quot; : &amp;quot;xxx&amp;quot;}&#39; &amp;quot;http://localhost:8080/user/authenticate&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -X GET --proxy http://proxy:8080 &amp;quot;http://www.google.de&amp;quot;&lt;/code&gt; - Use a proxy&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl -s -o /dev/null -w &amp;quot;%{http_code}&amp;quot; http://www.example.org&lt;/code&gt; &lt;a href=&#34;https://superuser.com/questions/272265/getting-curl-to-output-http-status-code&#34;&gt;1&lt;/a&gt; - Just get status code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;dig - DNS querying tool using OS resolver&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dig +short myip.opendns.com @resolver1.opendns.com&lt;/code&gt; &lt;a href=&#34;http://unix.stackexchange.com/questions/22615/how-can-i-get-my-external-ip-address-in-a-shell-script&#34;&gt;1&lt;/a&gt; - Retrieve your external IP address using DNS&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;httpie &lt;a href=&#34;https://httpie.org/&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;https://github.com/jkbrzt/httpie&#34;&gt;2&lt;/a&gt; - Better curl with JSON support&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ifconfig &lt;a href=&#34;https://en.wikipedia.org/wiki/Ifconfig&#34;&gt;1&lt;/a&gt; - Display network interface configuration for Unix-systems&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ipcalc &lt;a href=&#34;https://pypi.python.org/pypi/ipcalc&#34;&gt;1&lt;/a&gt; - IP subnet calculator&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;iptables &lt;a href=&#34;https://en.wikipedia.org/wiki/Iptables&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://manpages.debian.org/jessie/iptables/iptables.8.en.html&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;https://wiki.archlinux.org/index.php/iptables&#34;&gt;3&lt;/a&gt; - IPv4 firewall interface for Linux&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Overview of packet traversing (or &lt;a href=&#34;http://jekor.com/gressgraph/&#34;&gt;graph&lt;/a&gt; your own), Source: &lt;a href=&#34;https://lony.github.io/img/2017/commands/iptables.ep&#34;&gt;Pencil file&lt;/a&gt;
&lt;img src=&#34;https://lony.github.io/img/2017/commands/iptables.png&#34; alt=&#34;iptables overview&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -nvL&lt;/code&gt; &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-list-and-delete-iptables-firewall-rules&#34;&gt;1&lt;/a&gt; - Show existing rules&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - Numeric output, do not resolve host names&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - Verbose output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L [CHAIN]&lt;/code&gt; - List all rules in optional chain&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -F&lt;/code&gt; or &lt;code&gt;iptables --flush&lt;/code&gt; - Delete all existing rules&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -P OUTPUT DROP&lt;/code&gt; - DROP all outgoing traffic&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-P CHAIN TARGET&lt;/code&gt; - Set policy for chain to given target (e.g. ACCEPT, REJECT, DROP or RETURN)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -A OUTPUT -d 192.30.0.0/17 -j DROP&lt;/code&gt; - Drop only outgoing traffic to specified subnet&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-A OUTPUT&lt;/code&gt; - Append rule to OUTPUT chain&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d DEST&lt;/code&gt; - Destination e.g. address, hostname, network name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-j TARGET&lt;/code&gt; - Specifies target of rule; i.e. what to do if packet matches.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -A OUTPUT -s 192.20.0.1 -j DROP&lt;/code&gt; &lt;a href=&#34;https://www.linode.com/docs/security/firewalls/control-network-traffic-with-iptables&#34;&gt;1&lt;/a&gt; - Drop outgoing traffic only to specified IP address&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-s SRC&lt;/code&gt; - Source e.g. address, hostname, network name&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -I OUTPUT -p tcp --dport 80 -m state --state NEW -j LOG -m limit --limit 5/m --limit-burst 1 --log-uid --log-prefix &amp;quot;IPTABLES-OUTBOUND-P80: &amp;quot; --log-level 4&lt;/code&gt; - LOG outgoing traffic to port 80 into &lt;code&gt;/var/log/kern.log&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;iptables -A INPUT -p tcp --dport 80 -m limit --limit 25/minute --limit-burst 100 -j ACCEPT&lt;/code&gt; &lt;a href=&#34;https://crm.vpscheap.net/knowledgebase.php?action=displayarticle&amp;amp;id=29&#34;&gt;1&lt;/a&gt; - Prevent DoS Attack&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-m limit&lt;/code&gt; - Use limit iptables extension&lt;/li&gt;
&lt;li&gt;&lt;code&gt;–limit 25/minute&lt;/code&gt; - Limit to only 25 connections per minute&lt;/li&gt;
&lt;li&gt;&lt;code&gt;–limit-burst 100&lt;/code&gt; - The limit per minute will only be enforced if the total number of connections have reached this burst limit&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Allow incoming SSH connections only from specified subnet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -A INPUT -i eth0 -p tcp -s 192.168.100.0/24 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Combine rules using multiport&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -A INPUT -i eth0 -p tcp -m multiport --dports 22,80,443 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth0 -p tcp -m multiport --sports 22,80,443 -m state --state ESTABLISHED -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Load balance incoming traffic&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -A PREROUTING -i eth0 -p tcp --dport 443 -m state --state NEW -m nth --counter 0 --every 3 --packet 0 -j DNAT --to-destination 192.168.1.101:443
iptables -A PREROUTING -i eth0 -p tcp --dport 443 -m state --state NEW -m nth --counter 0 --every 3 --packet 1 -j DNAT --to-destination 192.168.1.102:443
iptables -A PREROUTING -i eth0 -p tcp --dport 443 -m state --state NEW -m nth --counter 0 --every 3 --packet 2 -j DNAT --to-destination 192.168.1.103:443
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;iftop &lt;a href=&#34;http://www.integralist.co.uk/posts/terminal-utils.html#10&#34;&gt;1&lt;/a&gt; - Monitor network traffic and show bandwith usage&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;iptraf &lt;a href=&#34;http://unix.stackexchange.com/questions/71456/check-outgoing-network-traffic&#34;&gt;1&lt;/a&gt; - Network statistic tool&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;netcat aka nc - Tool to read and write from network connections&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nc -vz external.host 6379&lt;/code&gt; - Just test Redis port with verbose output&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netcat -vv localhost 3306&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;netstat - Host based network statistic tool&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo netstat -tulpn | grep LISTEN&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo netstat -an | grep 8080 | grep ESTABLISHED&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ngrep &lt;a href=&#34;https://en.wikipedia.org/wiki/Ngrep&#34;&gt;1&lt;/a&gt; - Similar to tcpdump&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;nmap &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-test-your-firewall-configuration-with-nmap-and-tcpdump&#34;&gt;1&lt;/a&gt; - Network mapping and port scanning tool&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;nscd -i hosts&lt;/code&gt; &lt;a href=&#34;http://serverfault.com/questions/16299/how-do-i-flush-the-dns-cache-on-win-mac-linux-computers&#34;&gt;1&lt;/a&gt; - Flush DNS cache&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;nslookup &lt;a href=&#34;https://en.wikipedia.org/wiki/Nslookup&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;http://unix.stackexchange.com/questions/93808/dig-vs-nslookup&#34;&gt;2&lt;/a&gt; - DNS querying tool incl. own resolver&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ntop &lt;a href=&#34;https://en.wikipedia.org/wiki/Ntop&#34;&gt;1&lt;/a&gt; - Interactive network monitor&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ntpdate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ntpdate -q de.pool.ntp.org&lt;/code&gt; - Query NTP service without changing something&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;route &lt;a href=&#34;https://en.wikipedia.org/w/index.php?oldid=749414632&#34;&gt;1&lt;/a&gt; - View IP routing table of host (replaced with &lt;code&gt;iproute2&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;scp - secure copy&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scp server:source/ dest/&lt;/code&gt; - Copy from external server to local&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ssh - Secure Shell commands (more on how to setup &lt;a href=&#34;https://github.com/lony/dotFiles/tree/master/.ssh&#34;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh -vT git@github.com&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/2643502/git-permission-denied-publickey&#34;&gt;1&lt;/a&gt; - Testing GIT via SSH connection using verbose mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -L 27017:localhost:27017 ec2-FOO.eu-west-1.compute.amazonaws.com&lt;/code&gt; &lt;a href=&#34;https://www.howtoforge.com/reverse-ssh-tunneling&#34;&gt;1&lt;/a&gt; - Tunnel Mongo port from local machine to ec2 machine using SSH&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -i ${SSH_KEY} -L ${PORT}:${TARGET_HOST}:${PORT} ec2-user@${BASTION_HOST} -N&lt;/code&gt; - Tunnel port using a bastian host&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tcpdump &lt;a href=&#34;http://packetpushers.net/masterclass-tcpdump-interpreting-output/&#34;&gt;1&lt;/a&gt; - Packet analyzer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump -nvvvp -i any -c 100 -s 1500 -w /tmp/capture.file.pcap&lt;/code&gt; &lt;a href=&#34;http://bencane.com/2014/10/13/quick-and-practical-reference-for-tcpdump/&#34;&gt;1&lt;/a&gt; - Write first 1500 bytes of the first 100 packages to PCAP file which are coming from any device&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt; - Do not translate hostnames (use ips)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt; - Verbosity (max. vvv)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt; - Don&amp;rsquo;t put the interface into promiscuous mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; - Interface to use (any for all)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt; - Exit after amount of packets&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt; - Truncates bytes of data for each package&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt; - Store PCAP file of dump&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump -A &#39;port 80 and host 192.168.0.1&#39;&lt;/code&gt; &lt;a href=&#34;https://danielmiessler.com/study/tcpdump/&#34;&gt;1&lt;/a&gt; - Print package output in ANSII format&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump host 10.0.3.1&lt;/code&gt; - Capture only if source and destination ip is 10.0.3.1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump src host 10.0.3.1&lt;/code&gt; - Capture only if source ip is 10.0.3.1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump dst port 80&lt;/code&gt; - Caputre only if destination port is 80&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump (src net 10.0.0.144/28) and not(dst host 10.20.0.251)&lt;/code&gt; &lt;a href=&#34;http://serverfault.com/questions/354102/tcpdump-filter-on-network-and-subnet-mask&#34;&gt;1&lt;/a&gt;  - Captue only traffic which is from specific network and not going to a specific host&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hint: Use lowest IP for range to avoid &lt;code&gt;tcpdump: non-network bits set in “10.0.0.145/28&amp;quot;&lt;/code&gt; error &lt;a href=&#34;http://stackoverflow.com/questions/10300656/capture-incoming-traffic-in-tcpdump&#34;&gt;1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump &#39;tcp[tcpflags] &amp;amp; tcp-syn != 0&#39;&lt;/code&gt; &lt;a href=&#34;http://www.tcpdump.org/manpages/pcap-filter.7.html&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;https://syedali.net/2014/12/29/tcp-flags-explained/&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;https://danielmiessler.com/study/tcpflags/&#34;&gt;3&lt;/a&gt; - Use PCAP-filters to capture start (SYN) packets of TCP conversation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;tcpdump &#39;tcp[tcpflags] &amp;amp; (tcp-syn) != 0 and tcp[tcpflags] &amp;amp; (tcp-ack) == 0 or udp&#39;&lt;/code&gt; - Capture tcp SYN but not SYN-ACK and also udp packets&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;trace aka traceroute &lt;a href=&#34;https://en.wikipedia.org/wiki/Traceroute&#34;&gt;1&lt;/a&gt; - Display route for transit of packets across IP network&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;vnstat &lt;a href=&#34;https://wiki.ubuntuusers.de/vnStat/&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;http://www.thegeekstuff.com/2011/11/vnstat-network-traffic-monitor/&#34;&gt;2&lt;/a&gt; - Network traffic monitor&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;apache2&#34;&gt;Apache2&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;apachectl

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apachectl -t&lt;/code&gt; &lt;a href=&#34;https://serverfault.com/questions/541171/apache2-require-all-granted-doesnt-work&#34;&gt;1&lt;/a&gt; - Test syntax of config files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;apachectl -S&lt;/code&gt; - Show which files are beeing parsed&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;searching&#34;&gt;Searching&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;find&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;find / -type d -name &amp;quot;lony.github.io&amp;quot;&lt;/code&gt; - Search for lony&amp;hellip; folder in root&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find download/ -mtime +60  -delete&lt;/code&gt; - Search in download-folder for files last modified before +60 and delete&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find /path/to/directory/ -mindepth 1 -mtime +365 -type f -name &amp;quot;*.tmp&amp;quot; -print&lt;/code&gt; &lt;a href=&#34;http://unix.stackexchange.com/questions/194863/delete-files-older-than-x-days&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://askubuntu.com/questions/413529/delete-files-older-than-one-year-on-linux&#34;&gt;2&lt;/a&gt;, &lt;a href=&#34;http://stackoverflow.com/questions/5927369/recursively-look-for-files-with-a-specific-extension&#34;&gt;3&lt;/a&gt;
then &lt;code&gt;find /path/to/directory/ -mindepth 1 -mtime +365 -type f -name &amp;quot;*.tmp&amp;quot; -delete&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find /path/to/directory/ -mindepth 1 -maxdepth 1 -mtime +365 -type d -print -exec rm -r &amp;quot;{}&amp;quot; \;&lt;/code&gt; - &lt;a href=&#34;http://unix.stackexchange.com/questions/89925/how-to-delete-directories-based-on-find-output&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://askubuntu.com/questions/377438/how-can-i-recursively-delete-all-files-of-a-specific-extension-in-the-current-di&#34;&gt;2&lt;/a&gt; Delete directories recursivly&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;grep &lt;a href=&#34;https://www.cyberciti.biz/faq/grep-regular-expressions/&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grep foo /home/lony/bar&lt;/code&gt; - Search for foo in bar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -E &#39;foo|bar&#39; *.tx&lt;/code&gt; &lt;a href=&#34;https://unix.stackexchange.com/questions/37313/how-do-i-grep-for-multiple-patterns&#34;&gt;1&lt;/a&gt; - Searching for multiple patterns&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -E --color=auto &#39;foo|bar&#39; *.tx&lt;/code&gt; - Highlight pattern found&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -e ERROR -e WARN YOURLOG.log | grep -v IgnoreException&lt;/code&gt; - Searches in YOURLOG for ERRORs and WARnings but ignores your IgnoreException&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -r foo /home/lony/bar&lt;/code&gt; - Search recursively for foo in bar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep -nr &#39;foo*&#39; .&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/4121803/how-can-i-use-grep-to-find-a-word-inside-a-folder&#34;&gt;1&lt;/a&gt; - Search for foo* in &lt;code&gt;.&lt;/code&gt; showing relative line number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zgrep foo /home/lony/log.1.gz | less&lt;/code&gt; - Search inside gzip log file for foo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grep &#39;IPTABLES-OUTBOUND-&#39; /var/log/kern.log | sed &#39;s/.* DST=\(.*\)[[:space:]]LEN.* DPT=\(.*\)[[:space:]]WINDOW.*/\1_\2/&#39; | sort | uniq -c | sort -n&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/6447473/linux-command-or-script-counting-duplicated-lines-in-a-text-file&#34;&gt;1&lt;/a&gt; - Extract log entry and count distinct occurence of IP_Port combinations by frequency&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;documentation&#34;&gt;Documentation&lt;/h1&gt;

&lt;h1 id=&#34;miscellaneous&#34;&gt;Miscellaneous&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;watch &lt;a href=&#34;https://en.wikipedia.org/w/index.php?oldid=725168377&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;watch -d=cumulative -n 5 &#39;ls -lah | grep data.pcap&#39;&lt;/code&gt; &lt;a href=&#34;http://askubuntu.com/questions/430382/repeat-a-command-every-x-interval-of-time-in-terminal&#34;&gt;1&lt;/a&gt; - Runs ls every 5s and highlighting changes&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d=cumulative&lt;/code&gt; - Highlight differences that ever changed since start&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n &amp;lt;SECONDS&amp;gt;&lt;/code&gt; - Run every X seconds (default=2s)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;programming-sh&#34;&gt;Programming sh&lt;/h2&gt;

&lt;h3 id=&#34;array&#34;&gt;array&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Concat array &lt;a href=&#34;http://stackoverflow.com/questions/9522631/how-to-put-line-comment-for-a-multi-line-command&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://stackoverflow.com/questions/18599711/how-can-i-split-a-shell-command-over-multiple-lines-when-using-an-if-statement&#34;&gt;2&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew_packages=(
    ansible     # Comment1
    go      # Comment2
)

brew install &amp;quot;${brew_packages[@]}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;for&#34;&gt;for&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for i in &amp;quot;ci&amp;quot; &amp;quot;stage&amp;quot; &amp;quot;prod&amp;quot;; do (export ENVI=$i; echo $ENVI); done&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/8880603/loop-through-array-of-strings-in-bash&#34;&gt;1&lt;/a&gt;,&lt;a href=&#34;https://www.cyberciti.biz/faq/linux-unix-bash-for-loop-one-line-command/&#34;&gt;2&lt;/a&gt;,&lt;a href=&#34;http://stackoverflow.com/questions/10856129/setting-an-environment-variable-before-a-command-in-bash-not-working-for-second&#34;&gt;3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;if&#34;&gt;if&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bash version =&amp;gt; 4 &lt;a href=&#34;http://unix.stackexchange.com/questions/250778/should-i-check-bash-version&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [[ ${BASH_VERSION%%.*} -lt 4 ]]; then
echo &amp;quot;This script requires bash version &amp;gt; 4. Currently running is ${BASH_VERSION%%.*}&amp;quot;
exit 1
fi
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;until&#34;&gt;until&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;until ssh aws-host; do echo &amp;quot;Try again&amp;quot;; sleep 2; done&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;pasting&#34;&gt;pasting&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# With parameter expanding
cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt; bash-paste_expanding
export ME=`whoami`
EOF
## Result: export ME=lony
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;# Without parameter expanding (look at the &#39;)
cat &amp;lt;&amp;lt;&#39;EOF&#39; &amp;gt;&amp;gt; bash-paste_not-expanding
export ME=`whoami`
EOF
## Result: export ME=`whoami`
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pipe&#34;&gt;pipe&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt; FILE&lt;/code&gt; same as &lt;code&gt;1&amp;gt; FILE&lt;/code&gt; - Pipe standard out (stdout) into file and overwrites content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&amp;gt; FILE&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/818255/in-the-shell-what-does-21-mean&#34;&gt;1&lt;/a&gt; - Pipe errors (stderr) into file and overwrites content&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&amp;gt;&amp;amp;1 &amp;gt;&amp;gt; FILE&lt;/code&gt; &lt;a href=&#34;http://serverfault.com/questions/196734/bash-difference-between-and-operator&#34;&gt;1&lt;/a&gt; - Pipe errors (stderr) and standard out (stdout) into file and append content&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;read&#34;&gt;read&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read -p &amp;quot;Enter username to check:&amp;quot; USERNAME &amp;amp;&amp;amp; echo $USERNAME&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;databases&#34;&gt;Databases&lt;/h2&gt;

&lt;h3 id=&#34;sql&#34;&gt;SQL&lt;/h3&gt;

&lt;h4 id=&#34;mysql&#34;&gt;MySQL&lt;/h4&gt;

&lt;p&gt;Run &lt;code&gt;mysql -u root -h localhost -p&lt;/code&gt; to open the MySQL console, which lets you interact with the database.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SELECT User FROM mysql.user;&lt;/code&gt; &lt;a href=&#34;http://stackoverflow.com/questions/1135245/how-to-get-a-list-of-mysql-user-accounts&#34;&gt;1&lt;/a&gt; - Show users&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Change user password &lt;a href=&#34;http://stackoverflow.com/questions/22774739/change-mysql-user-password-using-command-line&#34;&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;USE mysql;
SET PASSWORD FOR &#39;USER&#39;@&#39;localhost&#39; = PASSWORD(&#39;CLEAR_TEXT_PASSWORD&#39;);
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;nosql&#34;&gt;NoSQL&lt;/h3&gt;

&lt;h4 id=&#34;mongo&#34;&gt;Mongo&lt;/h4&gt;

&lt;p&gt;Run &lt;code&gt;mongo&lt;/code&gt; to open the mongo console, which lets you interact with the database.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;show dbs&lt;/code&gt; - Show databases&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show collections&lt;/code&gt; - Show collections&lt;/li&gt;
&lt;li&gt;&lt;code&gt;show users&lt;/code&gt; - Show users&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db.changeUserPassword(&amp;quot;USERNAME&amp;quot;, &amp;quot;NEWPASSWORD&amp;quot;)&lt;/code&gt; - Change user password&lt;/li&gt;
&lt;li&gt;Authenticate

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;use admin&lt;/code&gt; - To select table&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db.auth(&amp;quot;USER&amp;quot;, &amp;quot;PASSWORD&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rs.status()&lt;/code&gt; - Show cluster status (replica set)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rs.conf()&lt;/code&gt; - Returns current replica set configuration&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rs.stepDown()&lt;/code&gt; - Trigger primary to become secondary and start election&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;h3 id=&#34;prompt&#34;&gt;Prompt&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ERRORLEVEL TIME USER@HOST PATH #
2 [14:03:07] lony@hobbes /var/log/upstart # echo $PS1
$? \[\e[01;34m\][$(date &amp;quot;+%H:%M:%S&amp;quot;)] \[\e[01;31m\]\u\[\e[1;34m\]@\[\e[1;31m\]\h\[\e[1;34m\] \w # \[\e[0m\]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;distribution&#34;&gt;Distribution&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;uname -a&lt;/code&gt; - Show kernel version and private system information&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;ubuntu&#34;&gt;Ubuntu&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lsb_release -a&lt;/code&gt; - Print version&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;meta&#34;&gt;Meta&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to structure this document? &lt;strong&gt;Answer&lt;/strong&gt;: as the UNIX wikipedia

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_Unix_commands&#34;&gt;article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Book:Unix_Commands&#34;&gt;book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Now that you read that far - thank you and please remember, if you find a bug or want to recommend something, please feel free to open an &lt;a href=&#34;https://github.com/lony/lony.github.io/issues&#34;&gt;issue&lt;/a&gt; and help me get better!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>